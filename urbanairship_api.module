<?php
// $Id$

/**
 * Implements hook_menu().
 */
function urbanairship_api_menu() {
  $items = array();

  $items['admin/settings/urbanairship_api'] = array(
    'title' => 'Urban Airship API Settings',
    'description' => 'Administer settings for Urban Airship.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('urbanairship_api_settings_form'),
    'access arguments' => array('administer urbanairship_api'),
  );

  return $items;
}

/**
 * Administrative settings for Urban Airship.
 *
 * @param string $form 
 * @return void
 */
function urbanairship_api_settings_form($form_state) {
  $form = array();

  $form['credentials'] = array(
    '#type' => 'fieldset',
    '#title' => t('Credentials'),
    '#description' => t('Enter credentials for Urban Airship'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#access' => user_access('administer urbanairship_api'),
  );
  
  $form['credentials']['ua_app_master_key'] = array(
    '#type' => 'textfield',
    '#title' => t('App Master Key'),
    '#size' => 40,
    '#maxlength' => 255,
    '#default_value' => variable_get('ua_app_master_key', ''),
  );

  $form['credentials']['ua_app_key'] = array(
    '#type' => 'textfield',
    '#title' => t('App Key'),
    '#size' => 40,
    '#maxlength' => 255,
    '#default_value' => variable_get('ua_app_key', ''),
  );
  
  $form['credentials']['ua_test_device_token'] = array(
    '#type' => 'textfield',
    '#title' => t('Test Device Token'),
    '#size' => 40,
    '#maxlength' => 255,
    '#default_value' => variable_get('ua_test_device_token', ''),
  );

  $form['connection_urls'] = array(
    '#type' => 'fieldset',
    '#title' => t('Connection URLS'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#access' => user_access('administer urbanairship_api'),
  );
  
  $form['connection_urls']['ua_server'] = array(
    '#type' => 'textfield',
    '#title' => t('Server'),
    '#description' => t('The URL for the server.'),
    '#size' => 40,
    '#maxlength' => 255,
    '#default_value' => variable_get('ua_server', 'go.urbanairship.com'),
  );
  
  $form['connection_urls']['ua_base_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Base URL'),
    '#description' => t('The base URL for the API.'),
    '#size' => 40,
    '#maxlength' => 255,
    '#default_value' => variable_get('ua_base_url', 'https://go.urbanairship.com/api'),
  );
  
  $form['connection_urls']['ua_device_token_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Device Token URL'),
    '#size' => 40,
    '#maxlength' => 255,
    '#default_value' => variable_get('ua_device_token_url', 'go.urbanairship.com/api' . '/device_tokens/'),
  );
  
  $form['connection_urls']['ua_broadcast_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Broadcast URL'),
    '#size' => 40,
    '#maxlength' => 255,
    '#default_value' => variable_get('ua_broadcast_url', 'go.urbanairship.com/api' . '/push/broadcast/')
  );
  
  $form['connection_urls']['ua_push_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Push URL'),
    '#size' => 40,
    '#maxlength' => 255,
    '#default_value' => variable_get('ua_push_url', 'go.urbanairship.com/api' . '/push/')
  );
  return system_settings_form($form);
}

/**
 * Sends a push notification to specific devices.
 *
 * @return void
 */
function urbanairship_api_push($payload = array(), $device_tokens = NULL, $aliases = NULL, $tags = NULL, $schedule_for = NULL, $exclude_tokens = NULL) {
  $data = array();  
  if (is_array($payload)) {
    $data['aps'] = $payload;  
  }
  else {
    return;
  }
  if (empty($device_tokens) && empty($aliases) && empty($tags)) {
    return;	
  }
  if (!empty($device_tokens)) {
    $data['device_tokens'] = (array)$device_tokens;	
  }
  if (!empty($aliases)) {
    $data['aliases'] = (array)$aliases;	
  }
  if (!empty($tags)) {
    $data['tags'] = (array)$tags;	
  }
  if (!empty($schedule_for)) {
    $data['schedule_for'] = (array)$schedule_for;	
  }
  if (!empty($exclude_tokens)) {
    $data['exclude_tokens'] = (array)$exclude_tokens;	
  }
  $body = json_encode($data);
  $push_url = variable_get('ua_push_url', 'go.urbanairship.com/api/push/');
  $user = variable_get('ua_app_key', '');
  $pass = variable_get('ua_app_master_key', '');
  $connect = 'https://' . $user . ':' . $pass . '@' . $push_url;
  $headers = array('Content-Type' => 'application/json');
  $request = drupal_http_request($connect, $headers, 'POST', $body);

  if ($request->code == 200) {
    watchdog('urbanairship_api', 'Succesfully sent push notification for payload <pre>@payload</pre>', array('@payload' => print_r($payload, TRUE)));
    return TRUE;
  } 
  else {
    watchdog('urbanairship_api', 'Push notification was not sent, received error @error.', array('@error' => $request->code), WATCHDOG_ERROR);
    return FALSE;
  }
}

/**
 * Sends a push notification to all registered devices.
 *
 * @return void
 */
function urbanairship_api_broadcast($payload = array(), $exclude_tokens = NULL) {
  if (!$payload) {
    return;
  }
  if ($exclude_tokens != null) {
    $payload['exclude_tokens'] = $exclude_tokens;
  }
  $body = json_encode(array('aps' => $payload));
  $broadcast_url = variable_get('ua_broadcast_url', 'go.urbanairship.com/api/push/broadcast/');
  $user = variable_get('ua_app_key', '');
  $pass = variable_get('ua_app_master_key', '');
  $connect = 'https://' . $user . ':' . $pass . '@' . $broadcast_url;
  $headers = array('Content-Type' => 'application/json');
  $request = drupal_http_request($connect, $headers, 'POST', $body);
  
  if ($request->code == 200) {
    watchdog('urbanairship_api', 'Succesfully sent push notification for payload <pre>@payload</pre>', array('@payload' => print_r($payload, TRUE)));
    return TRUE;
  } 
  else {
    watchdog('urbanairship_api', 'Push notification was not sent, received error @error.', array('@error' => $request->code), WATCHDOG_ERROR);
    return FALSE;
  }
}

/**
 * Implements hook_perm().
 */
function urbanairship_api_perm() {
  return array('administer urbanairship_api');
}

